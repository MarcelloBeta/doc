{
  "openapi": "3.0.1",
  "info": {
    "title": "Beta80.Safety.Services.Operation.WebApi",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/Operation"
    }
  ],
  "paths": {
    "/api/v1/status/credits": {
      "get": {
        "tags": [
          "_service"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdditionalInfos/Modify": {
      "post": {
        "tags": [
          "AdditionalInfos"
        ],
        "summary": "Modify additional info - 34. Dettaglio Evento - info aggiuntive",
        "description": "Modify additional info",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalInfoWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/AdditionalInfos/Query": {
      "post": {
        "tags": [
          "AdditionalInfos"
        ],
        "summary": "Query additional info",
        "description": "Query additional infos with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalInfoListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalInfoListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalInfoListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alerts/Create": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Create Alert",
        "description": "Create Alert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alerts/Modify": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Modify alert",
        "description": "Modify alert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alerts/Close": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Close alert",
        "description": "Close alert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertCloseWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alerts/Escalate": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Escalate Alert",
        "description": "Escalate Alert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertEscalateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alerts/Query": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Query Alert",
        "description": "Query Alerts with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Alerts/Detail": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Query detail alert",
        "description": "Query detail alert.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Assets/Query": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Query assets",
        "description": "Query assets with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetListQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetListQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Attachments/Query": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Query attachment",
        "description": "Query attachments with filtering, sorting and paging",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Attachments/Download": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Download attachment",
        "description": "Download attachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentDownloadQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Download a file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "204": {
            "description": "Download a file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Attachments/Create": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Create attachment",
        "description": "Create attachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Attachments/Remove": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "summary": "Remove attachment",
        "description": "Remove attachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachmentRemoveWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Audits/Query": {
      "post": {
        "tags": [
          "AuditsQuery"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Bulletins/Create": {
      "post": {
        "tags": [
          "Bulletins"
        ],
        "summary": "Create Bulletin",
        "description": "Create Bulletin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulletinCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Bulletins/Modify": {
      "post": {
        "tags": [
          "Bulletins"
        ],
        "summary": "Modify bulletin",
        "description": "Modify bulletin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulletinModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Bulletins/Close": {
      "post": {
        "tags": [
          "Bulletins"
        ],
        "summary": "Close bulletin",
        "description": "Close bulletin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulletinCloseWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Bulletins/Query": {
      "post": {
        "tags": [
          "Bulletins"
        ],
        "summary": "Query Bulletin",
        "description": "Query Bulletins with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulletinListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulletinListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulletinListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Bulletins/Detail": {
      "post": {
        "tags": [
          "Bulletins"
        ],
        "summary": "Query detail bulletin",
        "description": "Query detail bulletin.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulletinDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulletinDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulletinDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Campaigns/Create": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Create Campaign ",
        "description": "Create Campaign ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Campaigns/Modify": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Modify Campaign ",
        "description": "Modifica Campaign ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Campaigns/Remove": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Remove Campaign ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignDeleteWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Campaigns/Query": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Query Campaign",
        "description": "Query Campaign with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Campaigns/Detail": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Query detail Campaign",
        "description": "Query detail Campaign.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignDetailQueryFilterModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Campaigns/DetailValue": {
      "post": {
        "tags": [
          "Campaigns"
        ],
        "summary": "Query detail Campaign elements value",
        "description": "Query detail Campaign elements value.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignDetailQueryFilterModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignDataValueQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignDataValueQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyPlans/Create": {
      "post": {
        "tags": [
          "Emergency Plans"
        ],
        "summary": "Create Emergency Plan",
        "description": "Create Emergency Plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyPlanCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyPlans/Modify": {
      "post": {
        "tags": [
          "Emergency Plans"
        ],
        "summary": "Modify Emergency Plan",
        "description": "Modify Emergency Plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyPlanModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyPlans/Close": {
      "post": {
        "tags": [
          "Emergency Plans"
        ],
        "summary": "Close Emergency Plan",
        "description": "Close Emergency Plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyPlanCloseWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyPlans/Escalate": {
      "post": {
        "tags": [
          "Emergency Plans"
        ],
        "summary": "Escalate Emergency Plan",
        "description": "Escalate Emergency Plan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyPlanEscalateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyPlans/Query": {
      "post": {
        "tags": [
          "Emergency Plans"
        ],
        "summary": "Query Emergency Plan",
        "description": "Query Emergency Plans with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyPlanListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyPlanListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyPlanListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyPlans/Detail": {
      "post": {
        "tags": [
          "Emergency Plans"
        ],
        "summary": "Query details for Emergency Plan",
        "description": "Query details for Emergency Plan.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyPlanDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyPlanDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyPlanDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyRiskZones/Create": {
      "post": {
        "tags": [
          "EmergencyRiskZones"
        ],
        "summary": "Create Emergency Risk Zone",
        "description": "Nuova zona di Rischio",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyRiskZoneCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyRiskZones/Modify": {
      "post": {
        "tags": [
          "EmergencyRiskZones"
        ],
        "summary": "Modify Emergency Risk Zone",
        "description": "Modifica emergencyRiskZone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyRiskZoneModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyRiskZones/Query": {
      "post": {
        "tags": [
          "EmergencyRiskZones"
        ],
        "summary": "Query Emergency Risk Zone with filtering, sorting and paging",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyRiskZoneListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencyRiskZones/Detail": {
      "post": {
        "tags": [
          "EmergencyRiskZones"
        ],
        "summary": "Query detail Emergency Risk Zone",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyRiskZoneDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyRiskZoneDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencySecurityZones/Create": {
      "post": {
        "tags": [
          "EmergencySecurityZones"
        ],
        "summary": "Create Emergency Security Zone",
        "description": "Nuova zona di sicurezza",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencySecurityZoneCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencySecurityZones/Modify": {
      "post": {
        "tags": [
          "EmergencySecurityZones"
        ],
        "summary": "Modify Emergency Security Zone",
        "description": "Modifica zona di sicurezza",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencySecurityZoneModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencySecurityZones/Query": {
      "post": {
        "tags": [
          "EmergencySecurityZones"
        ],
        "summary": "Query Emergency Security Zone with filtering, sorting and paging",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencySecurityZoneListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EmergencySecurityZones/Detail": {
      "post": {
        "tags": [
          "EmergencySecurityZones"
        ],
        "summary": "Query detail Emergency Security Zone",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencySecurityZoneDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencySecurityZoneDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EventHistory/Query": {
      "post": {
        "tags": [
          "EventHistory"
        ],
        "summary": "Query with EventCode",
        "description": "Query all entities related to an event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHistoryRequestModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/EventHistory/Generate": {
      "post": {
        "tags": [
          "EventHistory"
        ],
        "summary": "Generate a pdf version of Event History",
        "description": "Generate pdf Event History",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHistoryRequestModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Create": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Create event - 31. Nuovo Evento",
        "description": "Create event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Modify": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Modify event - 32. Dettaglio Evento - modifica",
        "description": "Modify event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Acquire": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Acquire event - 32. Dettaglio Evento -modifica",
        "description": "Acquire event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCodeWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/AssignManaged": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Assign managed events",
        "description": "Assign managed events",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventIdentifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/AssignUnmanaged": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Assign unmanaged events",
        "description": "Assign unmanaged events",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventIdentifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Success": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Success event - 32. Dettaglio Evento -modifica",
        "description": "Success event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventWrapperModel"
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Release": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Release event - 32. Dettaglio Evento -modifica",
        "description": "Release event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventCodeWrapperModel"
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Fail": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Fail event - 32. Dettaglio Evento -modifica",
        "description": "Fail event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventWrapperModel"
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Abort": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Abort event - 32. Dettaglio Evento -modifica",
        "description": "Abort event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventWrapperModel"
                }
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/PutOnStandBy": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Put On StandBy event - 32. Dettaglio Evento -modifica",
        "description": "Put On StandBy event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventStandByOnWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/RemoveStandBy": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Remove StandBy event - 32. Dettaglio Evento -modifica",
        "description": "Remove StandBy event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCodeWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/ModifySeverity": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Modify event severity",
        "description": "Modify event severity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSeverityWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/SignalR": {
      "post": {
        "tags": [
          "Test"
        ],
        "summary": "Send SignlR for test pourpose",
        "description": "Send SignalR",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FakeSignalRRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/GetMockResponse": {
      "post": {
        "tags": [
          "Test"
        ],
        "summary": "Get Mock Http Response",
        "description": "Get Mock Http Response",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MockResponse"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Query": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Query event",
        "description": "Query events with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Detail": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Query detail event",
        "description": "Query detail event.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Kpi": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Kpi events",
        "description": "Kpi events",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KpiEventsBySeverityQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KpiEventsBySeverityQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/KpiBySource": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Kpi events by Source",
        "description": "Kpi events by Source",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KpiEventsBySourceQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KpiEventsBySourceQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/KpiByCategory": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Kpi events by alarm category",
        "description": "Kpi events by alarm category",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KpiEventsByCategoryQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KpiEventsByCategoryQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/ChildCount": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Count of related entities with EventCode",
        "description": "Query all entities related to an event and get the count of: 1. Attachments, 2. Notes, 3. Related Alarms, 4. Communication and 5. Interviews in this order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventRelatedCountRequestModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventRelatedCountResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/ManagedCount": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Count related managed/unmanaged event",
        "description": "Count related managed/unmanaged event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedEventsCountQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedEventsCountQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedEventsCountQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Relatable/Query": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Query relatable event - 31. Nuovo Evento",
        "description": "Query relateble events with filtering, sorting and paging",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelatebleEventListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelatebleEventListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelatebleEventListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Attribute/Query": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Query attributes with filtering, sorting and paging",
        "description": "Query attributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttributesQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttributeQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/History/Query": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Query history event - 42. Dettaglio Evento - Storico",
        "description": "Query history events with filtering, sorting and paging",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistoryListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Workload/Query": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Query Work load - 42. Dettaglio carichi di lavoro",
        "description": "Query Work load for users",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListManagedByOperatorResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Workload/GroupedQuery": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Query Work load - 42. Carichi di lavoro ragruppate per User",
        "description": "Query Work load for users",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEventSummaryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Events/Geos/ShowCustomLayer": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Show only Custom Layer on Geos",
        "description": "Show only Custom Layer on Geos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventListGeosQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ImpactedAssets/Create": {
      "post": {
        "tags": [
          "ImpactedAssets"
        ],
        "summary": "Create impacted asset - 32. Dettaglio Evento -modifica",
        "description": "Create impacted asset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactedAssetCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ImpactedAssets/Remove": {
      "post": {
        "tags": [
          "ImpactedAssets"
        ],
        "summary": "Remove impacted asset - 32. Dettaglio Evento -Eliminazione",
        "description": "Remove impacted asset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactedAssetRemoveWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ImpactedAssets/Query": {
      "post": {
        "tags": [
          "ImpactedAssets"
        ],
        "summary": "Query extra activity - 32. Dettaglio Evento -modifica",
        "description": "Query extra activities with filtering, sorting and paging",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactedAssetListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactedAssetsListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactedAssetsListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ImpactedAssets/Detail": {
      "post": {
        "tags": [
          "ImpactedAssets"
        ],
        "summary": "Detail extra activity - 32. Dettaglio Evento -modifica",
        "description": "Detail extra activity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactedAssetDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactedAssetsDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactedAssetsDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Incidents/Create": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Create incident - 32. Dettaglio Evento - modifica",
        "description": "Create incident",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Incidents/Success": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update incident state on success - 32. Dettaglio Evento -modifica",
        "description": "Put the status of the incident in fail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Incidents/Fail": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update incident state on fail - 32. Dettaglio Evento -modifica",
        "description": "Put the status of the incident in fail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Incidents/Abort": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update incident state on abort - 32. Dettaglio Evento -modifica",
        "description": "Put the status of the incident in abort",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Incidents/Query": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Query incident - 32. Dettaglio Evento -modifica",
        "description": "Query incidents with filtering, sorting and paging",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Incidents/Detail": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Query incident - 32. Dettaglio Evento -modifica",
        "description": "Query incident by code",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notes/Create": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Create note",
        "description": "Create note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteEventTypeFlowModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notes/Modify": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Modify note",
        "description": "Modify note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteModifyFlowModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notes/Remove": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Remove note",
        "description": "Remove note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteRemoveFlowModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notes/Calendar/Create": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Create calendar note",
        "description": "Create calendar note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarNoteCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notes/Calendar/Recurring/Create": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Create recurring calendar note",
        "description": "Create calendar note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalendarRecurringNoteCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notes/Calendar/Remove": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Remove calendar note",
        "description": "Remove calendar note",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteRemoveFlowModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notes/Query": {
      "post": {
        "tags": [
          "Notes"
        ],
        "summary": "Query note",
        "description": "Query notes with filtering, sorting and paging",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NoteListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Notifications/Notify": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Create notification",
        "description": "Create notification.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Psim/Query": {
      "post": {
        "tags": [
          "Psim"
        ],
        "summary": "Query PsimData with filtering",
        "description": "Query PsimData and relative Commands related to an Event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PsimDataDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PsimDataDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PsimDataDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Psim/Commands": {
      "post": {
        "tags": [
          "Psim"
        ],
        "summary": "Send Commands to Landscape",
        "description": "Send Commands to Landscape sensor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandData"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/insert/{entityName}": {
      "post": {
        "tags": [
          "RelatedEntitiesFlow"
        ],
        "parameters": [
          {
            "name": "entityName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/RelatedEntities/related/{entityName}": {
      "post": {
        "tags": [
          "RelatedEntitiesQuery"
        ],
        "parameters": [
          {
            "name": "entityName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/RelatedEntities/event/{eventId}": {
      "post": {
        "tags": [
          "RelatedEntitiesQuery"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/v1/RelatedEvents/Create": {
      "post": {
        "tags": [
          "RelatedEvents"
        ],
        "summary": "Create related event - 32. Dettaglio Evento -modifica",
        "description": "Create related event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelatedEventCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RelatedEvents/Query": {
      "post": {
        "tags": [
          "RelatedEvents"
        ],
        "summary": "Reads related events - 32. Dettaglio Evento -modifica",
        "description": "Query related events with filtering, sorting and paging",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelatedEventListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelatedEventListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelatedEventListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/Generate": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Generate Report with EventCode",
        "description": "Query all entities related to an event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportRequestModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/EventExport": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Export Event List to Excel",
        "description": "Export the event List to excel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventListQueryForExportModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/AlertExport": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Export Alert List to Excel",
        "description": "Export the alert List to excel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertListQueryForExportModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Reports/SignalingExport": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Export Signaling List to Excel",
        "description": "Export the signaling List to excel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingListQueryForExportModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RulesEngineParameters/Create": {
      "post": {
        "tags": [
          "RulesEngineParameters"
        ],
        "summary": "Create Rules Engine Parameter",
        "description": "Nuova regola per il motore di regole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RulesEngineParametersCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RulesEngineParameters/Modify": {
      "post": {
        "tags": [
          "RulesEngineParameters"
        ],
        "summary": "Modify Rules Engine Parameter",
        "description": "Modifica regola per il motore di regole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RulesEngineParametersModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RulesEngineParameters/Query": {
      "post": {
        "tags": [
          "RulesEngineParameters"
        ],
        "summary": "Query Rules Engine Parameters with filtering, sorting and paging",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RulesEngineParametersListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/RulesEngineParameters/Detail": {
      "post": {
        "tags": [
          "RulesEngineParameters"
        ],
        "summary": "Query detail Rules Engine Parameter",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RulesEngineParametersDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RulesEngineParametersDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Signalings/Create": {
      "post": {
        "tags": [
          "Signalings"
        ],
        "summary": "Create signaling - 31. Nuovo Segnalazione",
        "description": "Create signaling",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Signalings/Modify": {
      "post": {
        "tags": [
          "Signalings"
        ],
        "summary": "Modify signaling - 32. Dettaglio Segnalazione - modifica",
        "description": "Modify signaling",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Signalings/LinkToEvent": {
      "post": {
        "tags": [
          "Signalings"
        ],
        "summary": "Update signaling state as Linked to Event",
        "description": "Put the status of the signaling in as Linked to Event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Signalings/TransformToEvent": {
      "post": {
        "tags": [
          "Signalings"
        ],
        "summary": "Update signaling state as Transformed to Event",
        "description": "Put the status of the signaling in as Transformed to Event",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformedResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformedResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Signalings/Close": {
      "post": {
        "tags": [
          "Signalings"
        ],
        "summary": "Update signaling state as Closed",
        "description": "Put the status of the signaling as Closed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Signalings/Query": {
      "post": {
        "tags": [
          "Signalings"
        ],
        "summary": "Query Signaling",
        "description": "Query Signalings with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Signalings/Detail": {
      "post": {
        "tags": [
          "Signalings"
        ],
        "summary": "Query detail signaling",
        "description": "Query detail signaling.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingDetailQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplateElement/Create": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Create Signaling Template Element",
        "description": "Create Signaling TemplateElement ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateElementWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplateElement/Modify": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Modify Signaling Template Element",
        "description": "Modifica Signaling Template Element",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateElementModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplateElement/Remove": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Remove Signaling Template Element",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateElementDeleteWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplateElement/Query": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Query Signaling Template Element",
        "description": "Query Signaling Template Element with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateElementListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateElementListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateElementListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplateElement/Detail": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Query detail signaling template element",
        "description": "Query detail signaling template element.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateElementDetailQueryFilterModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateElementDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateElementDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplateElement/QueryByTemplate": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Query Signaling Template Element by Template",
        "description": "Query Signaling Template Element with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateElementListQueryModelByTemplate"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateElementListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateElementListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplate/Create": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Create Signaling Template",
        "description": "Create Signaling Template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplate/Modify": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Modify Signaling Template",
        "description": "Modifica Signaling Template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateModifyWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplate/Remove": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Remove Signaling Template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateDeleteWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplate/Query": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Query Signaling Template",
        "description": "Query Signaling Template with filtering, sorting and paging.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateListQueryModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateListQueryResultModelPagedQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/SignalingsTemplate/Detail": {
      "post": {
        "tags": [
          "SignalingsTemplate"
        ],
        "summary": "Query detail signaling template",
        "description": "Query detail signaling template.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignalingTemplateDetailQueryFilterModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateDetailQueryResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignalingTemplateDetailQueryResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Workstation/Create": {
      "post": {
        "tags": [
          "Workstation"
        ],
        "summary": "Create Workstation",
        "description": "New Workstation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkstationCreateWrapperModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkstationResultModel"
                }
              }
            }
          },
          "204": {
            "description": "No content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkstationResultModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Workstation/Checkin": {
      "post": {
        "tags": [
          "Workstation"
        ],
        "summary": "Set User Workstation ",
        "description": "Set User Workstation ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkstationRequestModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Workstation/Checkout": {
      "post": {
        "tags": [
          "Workstation"
        ],
        "summary": "Reset User Workstation ",
        "description": "Reset User Workstation ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkstationRequestModel"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionInfoListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "AdditionalInfoListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdditionalInfoListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AdditionalInfoListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/AdditionInfoListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "AdditionalInfoListQueryResultModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "communicationDate": {
            "type": "string",
            "description": "Communication Date",
            "format": "date-time",
            "nullable": true
          },
          "assignment": {
            "type": "string",
            "description": "Assignment",
            "nullable": true
          },
          "reportingName": {
            "type": "string",
            "description": "Reporting Name",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeWrapperResultModel"
            },
            "description": "Attribute",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdditionalInfoListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalInfoListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AdditionalInfoWrapperModel": {
        "required": [
          "attributes",
          "code",
          "communicationDate",
          "notes"
        ],
        "type": "object",
        "properties": {
          "communicationDate": {
            "type": "string",
            "description": "Communication Date",
            "format": "date-time"
          },
          "assignment": {
            "type": "string",
            "description": "Assignment",
            "nullable": true
          },
          "reportingName": {
            "type": "string",
            "description": "ReportingName",
            "nullable": true
          },
          "notes": {
            "minLength": 1,
            "type": "string",
            "description": "Notes"
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeModifyWrapper"
            },
            "description": "Attribute"
          }
        },
        "additionalProperties": false
      },
      "AlertCloseWrapperModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "AlertCreateWrapperModel": {
        "required": [
          "description",
          "orgCode",
          "startDate",
          "statusCode",
          "title",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "statusCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Status Code"
          },
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlertDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlertDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AlertDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "AlertDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "rootCode",
          "rootOrgCode",
          "stateCode",
          "stateDate",
          "statusCode",
          "statusName",
          "title",
          "typeCode",
          "typeName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Alert title"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Alert description"
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "rootCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Creator code"
          },
          "rootOrgCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Root Org code"
          },
          "typeName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          },
          "statusCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Status code"
          },
          "statusName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Status name"
          },
          "startDate": {
            "type": "string",
            "description": "Alert Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Alert end date",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AlertEscalateWrapperModel": {
        "required": [
          "description",
          "orgCode",
          "rootCode",
          "rootOrgCode",
          "startDate",
          "statusCode",
          "title",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "statusCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Status Code"
          },
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          },
          "rootCode": {
            "minLength": 1,
            "type": "string",
            "description": "Creator Code"
          },
          "rootOrgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Root Org. Code"
          }
        },
        "additionalProperties": false
      },
      "AlertListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "flowCode": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "rootCode": {
            "type": "string",
            "nullable": true
          },
          "rootOrgCode": {
            "type": "string",
            "nullable": true
          },
          "stateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "searchType": {
            "type": "string",
            "description": "Type of default query, must be set only for dashboard calls",
            "nullable": true
          },
          "freeSearch": {
            "type": "string",
            "nullable": true
          },
          "createDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AlertListQueryForExportModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AlertListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/AlertListQuerySortingModel"
          }
        },
        "additionalProperties": false
      },
      "AlertListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AlertListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/AlertListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "AlertListQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "rootCode",
          "rootOrgCode",
          "stateCode",
          "stateDate",
          "statusCode",
          "statusName",
          "title",
          "typeCode",
          "typeName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Alert title"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Alert description"
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "rootCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Creator code"
          },
          "rootOrgCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Root Org code"
          },
          "typeName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          },
          "statusCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Status code"
          },
          "statusName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Status name"
          },
          "startDate": {
            "type": "string",
            "description": "Alert Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Alert end date",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AlertListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AlertListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "flowCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "rootCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "rootOrgCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "typeCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "statusCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "title": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "startDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "endDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "AlertModifyWrapperModel": {
        "required": [
          "code",
          "description",
          "orgCode",
          "startDate",
          "statusCode",
          "title",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "statusCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Status Code"
          },
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "AreaSeverityResultItems": {
        "type": "object",
        "properties": {
          "areaCode": {
            "type": "string",
            "description": "Area Code",
            "nullable": true
          },
          "areaSeverityCode": {
            "type": "string",
            "description": "Area Severity Code",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetListQueryFilterModel": {
        "type": "object",
        "properties": {
          "siteCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssetListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AssetListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/AssetListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "AssetListQueryResultModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetQueryResultModel"
            },
            "description": "Items"
          }
        },
        "additionalProperties": false
      },
      "AssetListQuerySortingModel": {
        "type": "object",
        "properties": {
          "assetCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "AssetQueryResultModel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttachmentCreateWrapperModel": {
        "required": [
          "attachment"
        ],
        "type": "object",
        "properties": {
          "attachment": {
            "$ref": "#/components/schemas/AttachmentDetailFlowModel"
          }
        },
        "additionalProperties": false
      },
      "AttachmentDetailFlowModel": {
        "required": [
          "blobFile",
          "entityCode",
          "entityType",
          "fileName"
        ],
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnumModel"
          },
          "entityCode": {
            "minLength": 1,
            "type": "string",
            "description": "Entity Code"
          },
          "typeCode": {
            "type": "string",
            "description": "Type Code",
            "nullable": true
          },
          "fileName": {
            "minLength": 1,
            "type": "string"
          },
          "blobFile": {
            "type": "string",
            "format": "byte"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Expiration Date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttachmentDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttachmentDownloadQueryModel": {
        "required": [
          "filter",
          "frontEndMode"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AttachmentDetailQueryFilterModel"
          },
          "frontEndMode": {
            "type": "boolean",
            "description": "model"
          }
        },
        "additionalProperties": false
      },
      "AttachmentListQueryFilterModel": {
        "required": [
          "entityCode",
          "entityType"
        ],
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnumModel"
          },
          "entityCode": {
            "minLength": 1,
            "type": "string"
          },
          "documentCode": {
            "type": "string",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "fileExtension": {
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttachmentListQueryModel": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AttachmentListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/AttachmentListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "AttachmentListQueryResultModel": {
        "required": [
          "code",
          "entityCode",
          "entityType"
        ],
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnumModel"
          },
          "entityCode": {
            "minLength": 1,
            "type": "string",
            "description": "Entity Code"
          },
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "documentCode": {
            "type": "string",
            "description": "Document Code",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "description": "Type Code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "File Name",
            "nullable": true
          },
          "fileExtension": {
            "type": "string",
            "description": "File Extension",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Expiration Date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttachmentListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AttachmentListQuerySortingModel": {
        "type": "object",
        "properties": {
          "entityCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "documentCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "typeCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "fileName": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "fileExtension": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "expirationDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "AttachmentRemoveFlowModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "AttachmentRemoveWrapperModel": {
        "required": [
          "attachment"
        ],
        "type": "object",
        "properties": {
          "attachment": {
            "$ref": "#/components/schemas/AttachmentRemoveFlowModel"
          }
        },
        "additionalProperties": false
      },
      "AttributeModifyWrapper": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "checked": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributeQueryResultModel": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AttributeQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "AttributeQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "disabled": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "AttributeWrapperResultModel": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "checked": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AttributesQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/AttributeQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/AttributeQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "AuditListQueryModel": {
        "required": [
          "eventCode"
        ],
        "type": "object",
        "properties": {
          "eventCode": {
            "minLength": 1,
            "type": "string"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          },
          "sorting": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "BulletinCloseWrapperModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "BulletinCreateWrapperModel": {
        "required": [
          "description",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "validity": {
            "type": "string",
            "description": "Validity",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulletinItemFlow"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulletinDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulletinDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/BulletinDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "BulletinDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "stateCode",
          "stateDate",
          "validity"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Bulletin description"
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "validity": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Validity"
          },
          "startDate": {
            "type": "string",
            "description": "Bulletin Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Bulletin end date",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulletinItemQueryResultModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulletinItemFlow": {
        "type": "object",
        "properties": {
          "riskCode": {
            "type": "string",
            "description": "Risk Code",
            "nullable": true
          },
          "areaCode": {
            "type": "string",
            "description": "Area Code",
            "nullable": true
          },
          "areaSeverityCode": {
            "type": "string",
            "description": "Area Severity Code",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulletinItemQueryResultModel": {
        "type": "object",
        "properties": {
          "riskCode": {
            "type": "string",
            "description": "Risk Code",
            "nullable": true
          },
          "areas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AreaSeverityResultItems"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulletinListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "flowCode": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "validity": {
            "type": "string",
            "nullable": true
          },
          "stateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "searchType": {
            "type": "string",
            "description": "Type of default query, must be set only for dashboard calls",
            "nullable": true
          },
          "freeSearch": {
            "type": "string",
            "nullable": true
          },
          "createDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulletinListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/BulletinListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/BulletinListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "BulletinListQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "stateCode",
          "stateDate",
          "validity"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Bulletin description"
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "validity": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Validity"
          },
          "startDate": {
            "type": "string",
            "description": "Bulletin Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Bulletin end date",
            "format": "date-time"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulletinItemQueryResultModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulletinListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulletinListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BulletinListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "flowCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "validity": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "startDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "endDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "BulletinModifyWrapperModel": {
        "required": [
          "code",
          "description",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "validity": {
            "type": "string",
            "description": "Validity",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "CalendarNoteCreateWrapperModel": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          },
          "workSegmentDetailItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkSegmentItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalendarRecurringNoteCreateWrapperModel": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeeks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          },
          "workSegmentDetail": {
            "$ref": "#/components/schemas/WorkSegmentRecurring"
          }
        },
        "additionalProperties": false
      },
      "CallerContactCreateFlowModel": {
        "required": [
          "typeCode",
          "value"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "minLength": 1,
            "type": "string",
            "description": "Type"
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "Value"
          }
        },
        "additionalProperties": false
      },
      "CallerContactDetailFlowModel": {
        "required": [
          "typeCode",
          "value"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "minLength": 1,
            "type": "string",
            "description": "Type"
          },
          "value": {
            "minLength": 1,
            "type": "string",
            "description": "Value"
          }
        },
        "additionalProperties": false
      },
      "CallerDetailQueryResultModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "reportingPartyTypeCode": {
            "type": "string",
            "description": "Reporting Party Type",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "External ID",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "description": "Type Code",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true
          },
          "reportingPartyType": {
            "$ref": "#/components/schemas/ReportingPartyTypeQueryResultModels"
          },
          "type": {
            "$ref": "#/components/schemas/CallerTypeQueryResultDetailModel"
          }
        },
        "additionalProperties": false
      },
      "CallerModifyWrapper": {
        "required": [
          "callerContact",
          "reportingPartyTypeCode"
        ],
        "type": "object",
        "properties": {
          "reportingPartyTypeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Reporting Party Type"
          },
          "externalId": {
            "type": "string",
            "description": "External ID",
            "nullable": true
          },
          "note": {
            "maxLength": 200,
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "callerContact": {
            "$ref": "#/components/schemas/CallerContactDetailFlowModel"
          }
        },
        "additionalProperties": false
      },
      "CallerTypeQueryResultDetailModel": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CallerWrapper": {
        "required": [
          "callerContact",
          "reportingPartyTypeCode"
        ],
        "type": "object",
        "properties": {
          "reportingPartyTypeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Reporting Party Type"
          },
          "externalId": {
            "type": "string",
            "description": "External ID",
            "nullable": true
          },
          "note": {
            "maxLength": 200,
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "callerContact": {
            "$ref": "#/components/schemas/CallerContactCreateFlowModel"
          }
        },
        "additionalProperties": false
      },
      "CampaignDataValueQueryResultModel": {
        "required": [
          "code",
          "description",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "startDate": {
            "type": "string",
            "description": "StartDate",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "EndDate",
            "format": "date-time"
          },
          "ruleType": {
            "type": "string",
            "description": "RuleType",
            "nullable": true
          },
          "ruleValue": {
            "type": "string",
            "description": "RuleValue",
            "nullable": true
          },
          "signalingTemplateCode": {
            "type": "string",
            "description": "SignalingTemplateCode",
            "nullable": true
          },
          "signalingTemplateName": {
            "type": "string",
            "description": "SignalingTemplateName",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "description": "Disabled"
          },
          "campaignCode": {
            "type": "string",
            "nullable": true
          },
          "campaignDescription": {
            "type": "string",
            "nullable": true
          },
          "templateCode": {
            "type": "string",
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "nullable": true
          },
          "elementValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignalingTemplateElementValue"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CampaignDeleteWrapperModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "CampaignDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CampaignDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "startDate": {
            "type": "string",
            "description": "StartDate",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "EndDate",
            "format": "date-time"
          },
          "ruleType": {
            "type": "string",
            "description": "RuleType",
            "nullable": true
          },
          "ruleValue": {
            "type": "string",
            "description": "RuleValue",
            "nullable": true
          },
          "signalingTemplateCode": {
            "type": "string",
            "description": "SignalingTemplateCode",
            "nullable": true
          },
          "signalingTemplateName": {
            "type": "string",
            "description": "SignalingTemplateName",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "description": "Disabled"
          }
        },
        "additionalProperties": false
      },
      "CampaignListQueryFilterModel": {
        "type": "object",
        "properties": {
          "freeSearch": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CampaignListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/CampaignListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/CampaignListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "CampaignListQueryResultModel": {
        "required": [
          "code",
          "description",
          "endDate",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "startDate": {
            "type": "string",
            "description": "StartDate",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "EndDate",
            "format": "date-time"
          },
          "ruleType": {
            "type": "string",
            "description": "RuleType",
            "nullable": true
          },
          "ruleValue": {
            "type": "string",
            "description": "RuleValue",
            "nullable": true
          },
          "signalingTemplateCode": {
            "type": "string",
            "description": "SignalingTemplateCode",
            "nullable": true
          },
          "signalingTemplateName": {
            "type": "string",
            "description": "SignalingTemplateName",
            "nullable": true
          },
          "disabled": {
            "type": "boolean",
            "description": "Disabled"
          }
        },
        "additionalProperties": false
      },
      "CampaignListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CampaignListQuerySortingModel": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CampaignModifyWrapperModel": {
        "required": [
          "code",
          "disabled",
          "endDate",
          "orgCode",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "StartDate",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "EndDate",
            "format": "date-time"
          },
          "description": {
            "maxLength": 600,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "description": "RuleType",
            "nullable": true
          },
          "ruleValue": {
            "type": "string",
            "description": "RuleValue",
            "nullable": true
          },
          "signalingTemplateCode": {
            "type": "string",
            "description": "SignalingTemplateCode",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "disabled": {
            "type": "boolean",
            "description": "Disabled"
          }
        },
        "additionalProperties": false
      },
      "CampaignWrapperModel": {
        "required": [
          "endDate",
          "orgCode",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "description": "StartDate",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "EndDate",
            "format": "date-time"
          },
          "description": {
            "maxLength": 600,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ruleType": {
            "type": "string",
            "description": "RuleType",
            "nullable": true
          },
          "ruleValue": {
            "type": "string",
            "description": "RuleValue",
            "nullable": true
          },
          "signalingTemplateCode": {
            "type": "string",
            "description": "SignalingTemplateCode",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          }
        },
        "additionalProperties": false
      },
      "CommandData": {
        "type": "object",
        "properties": {
          "commandTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "multiAttributeStateId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string"
      },
      "DeviceLocation": {
        "type": "object",
        "properties": {
          "sourceID": {
            "type": "string",
            "nullable": true
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "locationDescription": {
            "type": "string",
            "nullable": true
          },
          "siteTntCode": {
            "type": "string",
            "nullable": true
          },
          "siteOrgCode": {
            "type": "string",
            "nullable": true
          },
          "siteCode": {
            "type": "string",
            "nullable": true
          },
          "locationCategory": {
            "type": "string",
            "nullable": true
          },
          "deviceID": {
            "type": "integer",
            "format": "int32"
          },
          "locationID": {
            "type": "integer",
            "format": "int32"
          },
          "parentLocationID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanCloseWrapperModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanCreateWrapperModel": {
        "required": [
          "description",
          "orgCode",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmergencyPlanDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "rootCode",
          "rootOrgCode",
          "stateCode",
          "stateDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencyPlan Title"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencyPlan Description"
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "rootCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Creator code"
          },
          "rootOrgCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Root Org code"
          },
          "startDate": {
            "type": "string",
            "description": "EmergencyPlan Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "EmergencyPlan end date",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanEscalateWrapperModel": {
        "required": [
          "description",
          "orgCode",
          "rootCode",
          "rootOrgCode",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          },
          "rootCode": {
            "minLength": 1,
            "type": "string",
            "description": "Creator Code"
          },
          "rootOrgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Root Org. Code"
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "flowCode": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "rootCode": {
            "type": "string",
            "nullable": true
          },
          "rootOrgCode": {
            "type": "string",
            "nullable": true
          },
          "stateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "searchType": {
            "type": "string",
            "description": "Type of default query, must be set only for dashboard calls",
            "nullable": true
          },
          "freeSearch": {
            "type": "string",
            "nullable": true
          },
          "createDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmergencyPlanListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/EmergencyPlanListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanListQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "rootCode",
          "rootOrgCode",
          "stateCode",
          "stateDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencyPlan Title"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencyPlan Description"
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "rootCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Creator code"
          },
          "rootOrgCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Root Org code"
          },
          "startDate": {
            "type": "string",
            "description": "EmergencyPlan Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "EmergencyPlan end date",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyPlanListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "flowCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "rootCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "rootOrgCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "title": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "startDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "endDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencyPlanModifyWrapperModel": {
        "required": [
          "code",
          "description",
          "orgCode",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "startDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneCreateWrapperModel": {
        "required": [
          "description",
          "emergencyPlancode",
          "geoLocation"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencyRiskZone Description"
          },
          "emergencyPlancode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Emergency Plan code"
          },
          "geoLocation": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Risk zone geolocation"
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmergencyRiskZoneDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "emergencyPlancode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencyRiskZone Description"
          },
          "emergencyPlancode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Emergency Plan code"
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "emergencyPlancode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmergencyRiskZoneListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/EmergencyRiskZoneListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneListQueryResultModel": {
        "required": [
          "code",
          "description",
          "emergencyPlancode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencyRiskZone Description"
          },
          "emergencyPlancode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Emergency Plan code"
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyRiskZoneListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "emergencyPlancode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneModifyWrapperModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Emergency Risk Zone Code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "EmergencyRiskZone Description",
            "nullable": true
          },
          "emergencyPlancode": {
            "type": "string",
            "description": "Emergency Plan code",
            "nullable": true
          },
          "geoLocation": {
            "type": "string",
            "description": "Risk zone geolocation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyRiskZoneResultModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "emergencyPlanCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneCreateWrapperModel": {
        "required": [
          "description",
          "emergencyPlancode",
          "geoLocation"
        ],
        "type": "object",
        "properties": {
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencySecurityZone Description"
          },
          "emergencyPlancode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Emergency Plan code"
          },
          "geoLocation": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Security zone geolocation"
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmergencySecurityZoneDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "emergencyPlancode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencySecurityZone Description"
          },
          "emergencyPlancode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Emergency Plan code"
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "emergencyPlancode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EmergencySecurityZoneListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/EmergencySecurityZoneListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneListQueryResultModel": {
        "required": [
          "code",
          "description",
          "emergencyPlancode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "EmergencySecurityZone Description"
          },
          "emergencyPlancode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Emergency Plan code"
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencySecurityZoneListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "emergencyPlancode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneModifyWrapperModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Emergency Risk Zone Code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "EmergencySecurityZone Description",
            "nullable": true
          },
          "emergencyPlancode": {
            "type": "string",
            "description": "Emergency Plan code",
            "nullable": true
          },
          "geoLocation": {
            "type": "string",
            "description": "Security zone geolocation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencySecurityZoneResultModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "emergencyPlanCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EntityTypeEnumModel": {
        "enum": [
          "Event",
          "Message",
          "User",
          "Procedure",
          "Task",
          "RecoveryPassword",
          "Calendar",
          "Signaling",
          "Alert",
          "Organization",
          "Site"
        ],
        "type": "string"
      },
      "EventBySeverityCount": {
        "type": "object",
        "properties": {
          "critical": {
            "type": "integer",
            "format": "int32"
          },
          "high": {
            "type": "integer",
            "format": "int32"
          },
          "medium": {
            "type": "integer",
            "format": "int32"
          },
          "low": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventCodeFlowModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "EventCodeWrapperModel": {
        "required": [
          "event"
        ],
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventCodeFlowModel"
          }
        },
        "additionalProperties": false
      },
      "EventCreateWrapperModel": {
        "required": [
          "caller",
          "isReserved",
          "isSimulation",
          "orgCode",
          "severityCode",
          "typeCode",
          "userCode",
          "userOrgCode"
        ],
        "type": "object",
        "properties": {
          "userOrgCode": {
            "minLength": 1,
            "type": "string",
            "description": "User Org. Code"
          },
          "userCode": {
            "minLength": 1,
            "type": "string",
            "description": "User Code"
          },
          "notificationCode": {
            "type": "string",
            "description": "Notification Code",
            "nullable": true
          },
          "typeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "subtypeCode": {
            "type": "string",
            "description": "Subtype Code",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Severity Code"
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "eventDate": {
            "type": "string",
            "description": "Event Date",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is Reserved"
          },
          "isSimulation": {
            "type": "boolean",
            "description": "Is Simulation"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isExclusive": {
            "type": "boolean",
            "description": "Is Exclusive",
            "nullable": true
          },
          "locationBuilding": {
            "type": "string",
            "description": "Location Building",
            "nullable": true
          },
          "locationFloor": {
            "type": "string",
            "description": "Location Floor",
            "nullable": true
          },
          "locationRoom": {
            "type": "string",
            "description": "Location Room",
            "nullable": true
          },
          "locationNotes": {
            "type": "string",
            "description": "Location Notes",
            "nullable": true
          },
          "caller": {
            "$ref": "#/components/schemas/CallerWrapper"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentDetailFlowModel"
            },
            "description": "Related Sites",
            "nullable": true
          },
          "impactedAssets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpactedAssetDetailFlowModel"
            },
            "description": "Related Impact Assets",
            "nullable": true
          },
          "relatedEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedEventDetailFlowModel"
            },
            "description": "Related Events",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EventDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "EventDetailQueryResultModel": {
        "required": [
          "additionalInfoCode",
          "caller",
          "code",
          "creator",
          "escalationDate",
          "eventDate",
          "flowCode",
          "isReserved",
          "isSimulation",
          "manager",
          "severityCode",
          "severityName",
          "sites",
          "stateCode",
          "stateDate",
          "type__Name",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "managCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag code",
            "nullable": true
          },
          "managDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag date",
            "format": "date-time",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "description": "Event date",
            "format": "date-time"
          },
          "flowCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "type__Name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          },
          "subtypeCode": {
            "type": "string",
            "description": "Subtype code",
            "nullable": true
          },
          "subtypeName": {
            "type": "string",
            "description": "Subtype name",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity code"
          },
          "severityName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Severity name"
          },
          "additionalInfoCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Additional Info Code"
          },
          "reference": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Reference",
            "nullable": true
          },
          "note": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "closingNote": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Closing Note",
            "nullable": true
          },
          "escalationDate": {
            "type": "string",
            "description": "Escalation date",
            "format": "date-time"
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is Reserved"
          },
          "isSimulation": {
            "type": "boolean",
            "description": "Is Simulation"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "isExclusive": {
            "type": "boolean",
            "description": "Is Exclusive",
            "nullable": true
          },
          "state__Name": {
            "type": "string",
            "description": "State Name",
            "nullable": true
          },
          "callerTypeName": {
            "type": "string",
            "description": "Caller Type Name",
            "nullable": true
          },
          "shortLocalizationObject": {
            "type": "string",
            "description": "Short Localization Object",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "description": "Category Name",
            "nullable": true
          },
          "categoryCode": {
            "type": "string",
            "description": "Category Code",
            "nullable": true
          },
          "urlLocationExternal": {
            "type": "string",
            "description": "Url Location for new tab",
            "nullable": true
          },
          "urlLocationIframe": {
            "type": "string",
            "description": "Url Location for iframe",
            "nullable": true
          },
          "locationBuilding": {
            "type": "string",
            "description": "Location Building",
            "nullable": true
          },
          "locationFloor": {
            "type": "string",
            "description": "Location Floor",
            "nullable": true
          },
          "locationRoom": {
            "type": "string",
            "description": "Location Room",
            "nullable": true
          },
          "locationNotes": {
            "type": "string",
            "description": "Location Notes",
            "nullable": true
          },
          "impactedAssetCount": {
            "type": "integer",
            "description": "Impacted Asset Count",
            "format": "int32",
            "nullable": true
          },
          "caller": {
            "$ref": "#/components/schemas/CallerDetailQueryResultModel"
          },
          "creator": {
            "$ref": "#/components/schemas/UserQueryResultDetailModel"
          },
          "manager": {
            "$ref": "#/components/schemas/UserQueryResultDetailModel"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteQueryResultDetailModel"
            },
            "description": "Sites"
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceLocation"
            },
            "description": "Location",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventEntity": {
        "type": "object",
        "properties": {
          "eventEntityType": {
            "$ref": "#/components/schemas/EventEntityType"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventEntityType": {
        "enum": [
          "EVENT",
          "EVENT_ESCALATION",
          "SYSTEM_STATUS",
          "AGENT",
          "SIGNALING",
          "ALERT",
          "INCIDENT",
          "PROCEDURE",
          "ATTACHMENT"
        ],
        "type": "string"
      },
      "EventFlowModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "closingNote": {
            "type": "string",
            "description": "Closing Note",
            "nullable": true
          },
          "bottomUpDirection": {
            "type": "boolean",
            "description": "BottomUpDirection",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventHistoryRequestModel": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventIdentifyWrapperModel": {
        "required": [
          "eventCodes",
          "userId"
        ],
        "type": "object",
        "properties": {
          "eventCodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Event Codes"
          },
          "userId": {
            "minLength": 1,
            "type": "string",
            "description": "User Id"
          }
        },
        "additionalProperties": false
      },
      "EventListGeosQueryModel": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string",
            "nullable": true
          },
          "userGeosId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventListManagedByOperatorItem": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventListManagedByOperatorResultModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventListManagedByOperatorItem"
            },
            "nullable": true
          },
          "eventCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "managCode": {
            "type": "string",
            "nullable": true
          },
          "managDate": {
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "flowCode": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "stateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "subtypeCode": {
            "type": "string",
            "nullable": true
          },
          "severityCode": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "closingNote": {
            "type": "string",
            "nullable": true
          },
          "escalationDate": {
            "type": "string",
            "nullable": true
          },
          "reportingPartyTypeCode": {
            "type": "string",
            "nullable": true
          },
          "severityCodeArray": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "stateCodeArray": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "categoryCode": {
            "type": "string",
            "nullable": true
          },
          "searchType": {
            "type": "string",
            "description": "Type of default query, must be set only for dashboard calls",
            "nullable": true
          },
          "freeSearch": {
            "type": "string",
            "nullable": true
          },
          "createDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "siteCode": {
            "type": "string",
            "nullable": true
          },
          "isReserved": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EventListQueryForExportModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EventListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/EventListQuerySortingModel"
          }
        },
        "additionalProperties": false
      },
      "EventListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/EventListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/EventListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "EventListQueryResultModel": {
        "required": [
          "additionalInfoCode",
          "caller",
          "code",
          "completed",
          "creator",
          "escalationDate",
          "eventDate",
          "flowCode",
          "isReserved",
          "isSimulation",
          "manager",
          "severity",
          "severityCode",
          "severityName",
          "sites",
          "stateCode",
          "stateDate",
          "type",
          "type__Name",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "managCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag code",
            "nullable": true
          },
          "managDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag date",
            "format": "date-time",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "description": "Event date",
            "format": "date-time"
          },
          "flowCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "type__Name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          },
          "subtypeCode": {
            "type": "string",
            "description": "Subtype code",
            "nullable": true
          },
          "subtypeName": {
            "type": "string",
            "description": "Subtype name",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity code"
          },
          "severityName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Severity name"
          },
          "additionalInfoCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Additional Info Code"
          },
          "reference": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Reference",
            "nullable": true
          },
          "note": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "closingNote": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Closing Note",
            "nullable": true
          },
          "escalationDate": {
            "type": "string",
            "description": "Escalation date",
            "format": "date-time"
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is Reserved"
          },
          "isSimulation": {
            "type": "boolean",
            "description": "Is Simulation"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "isExclusive": {
            "type": "boolean",
            "description": "Is Exclusive",
            "nullable": true
          },
          "state__Name": {
            "type": "string",
            "description": "State Name",
            "nullable": true
          },
          "callerTypeName": {
            "type": "string",
            "description": "Caller Type Name",
            "nullable": true
          },
          "shortLocalizationObject": {
            "type": "string",
            "description": "Short Localization Object",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "description": "Category Name",
            "nullable": true
          },
          "categoryCode": {
            "type": "string",
            "description": "Category Code",
            "nullable": true
          },
          "urlLocationExternal": {
            "type": "string",
            "description": "Url Location for new tab",
            "nullable": true
          },
          "urlLocationIframe": {
            "type": "string",
            "description": "Url Location for iframe",
            "nullable": true
          },
          "locationBuilding": {
            "type": "string",
            "description": "Location Building",
            "nullable": true
          },
          "locationFloor": {
            "type": "string",
            "description": "Location Floor",
            "nullable": true
          },
          "locationRoom": {
            "type": "string",
            "description": "Location Room",
            "nullable": true
          },
          "locationNotes": {
            "type": "string",
            "description": "Location Notes",
            "nullable": true
          },
          "impactedAssetCount": {
            "type": "integer",
            "description": "Impacted Asset Count",
            "format": "int32",
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "format": "double"
          },
          "completed": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Completed"
          },
          "caller": {
            "$ref": "#/components/schemas/CallerDetailQueryResultModel"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityTypeQueryResultDetailModel"
          },
          "type": {
            "$ref": "#/components/schemas/EventTypeQueryResultDetailModel"
          },
          "manager": {
            "$ref": "#/components/schemas/UserQueryResultDetailModel"
          },
          "creator": {
            "$ref": "#/components/schemas/UserQueryResultDetailModel"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteQueryResultDetailModel"
            },
            "description": "Sites"
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceLocation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EventListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "managCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "managDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "eventDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "flowCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "state__Name": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "callerTypeName": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "typeCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "type__Name": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "subtypeCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "severityCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "reference": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "note": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "closingNote": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "escalationDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "completed": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "severity": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "type": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "manager": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "callerReportingType": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "callerExternalId": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "EventModifyWrapperModel": {
        "required": [
          "caller",
          "code",
          "isReserved",
          "isSimulation",
          "orgCode",
          "severityCode",
          "typeCode",
          "userCode",
          "userOrgCode"
        ],
        "type": "object",
        "properties": {
          "userOrgCode": {
            "minLength": 1,
            "type": "string",
            "description": "User Org. Code"
          },
          "userCode": {
            "minLength": 1,
            "type": "string",
            "description": "User Code"
          },
          "notificationCode": {
            "type": "string",
            "description": "Notification Code",
            "nullable": true
          },
          "typeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "subtypeCode": {
            "type": "string",
            "description": "Subtype Code",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Severity Code"
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "eventDate": {
            "type": "string",
            "description": "Event Date",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "description": "Reference",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is Reserved"
          },
          "isSimulation": {
            "type": "boolean",
            "description": "Is Simulation"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isExclusive": {
            "type": "boolean",
            "description": "Is Exclusive",
            "nullable": true
          },
          "locationBuilding": {
            "type": "string",
            "description": "Location Building",
            "nullable": true
          },
          "locationFloor": {
            "type": "string",
            "description": "Location Floor",
            "nullable": true
          },
          "locationRoom": {
            "type": "string",
            "description": "Location Room",
            "nullable": true
          },
          "locationNotes": {
            "type": "string",
            "description": "Location Notes",
            "nullable": true
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "isAutomatic": {
            "type": "boolean",
            "description": "Automatic",
            "nullable": true
          },
          "caller": {
            "$ref": "#/components/schemas/CallerModifyWrapper"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentDetailFlowModel"
            },
            "description": "Related Sites",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventOperation": {
        "enum": [
          "CLOSED",
          "UPDATED",
          "CREATED",
          "DELETED",
          "NULL",
          "RELATED",
          "MANAGED",
          "UNMANAGED"
        ],
        "type": "string"
      },
      "EventQueryResultDetailModel": {
        "required": [
          "additionalInfoCode",
          "code",
          "escalationDate",
          "eventDate",
          "flowCode",
          "isReserved",
          "isSimulation",
          "severityCode",
          "severityName",
          "stateCode",
          "stateDate",
          "type__Name",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "managCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag code",
            "nullable": true
          },
          "managDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag date",
            "format": "date-time",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "description": "Event date",
            "format": "date-time"
          },
          "flowCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "type__Name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          },
          "subtypeCode": {
            "type": "string",
            "description": "Subtype code",
            "nullable": true
          },
          "subtypeName": {
            "type": "string",
            "description": "Subtype name",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity code"
          },
          "severityName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Severity name"
          },
          "additionalInfoCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Additional Info Code"
          },
          "reference": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Reference",
            "nullable": true
          },
          "note": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "closingNote": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Closing Note",
            "nullable": true
          },
          "escalationDate": {
            "type": "string",
            "description": "Escalation date",
            "format": "date-time"
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is Reserved"
          },
          "isSimulation": {
            "type": "boolean",
            "description": "Is Simulation"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "isExclusive": {
            "type": "boolean",
            "description": "Is Exclusive",
            "nullable": true
          },
          "state__Name": {
            "type": "string",
            "description": "State Name",
            "nullable": true
          },
          "callerTypeName": {
            "type": "string",
            "description": "Caller Type Name",
            "nullable": true
          },
          "shortLocalizationObject": {
            "type": "string",
            "description": "Short Localization Object",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "description": "Category Name",
            "nullable": true
          },
          "categoryCode": {
            "type": "string",
            "description": "Category Code",
            "nullable": true
          },
          "urlLocationExternal": {
            "type": "string",
            "description": "Url Location for new tab",
            "nullable": true
          },
          "urlLocationIframe": {
            "type": "string",
            "description": "Url Location for iframe",
            "nullable": true
          },
          "locationBuilding": {
            "type": "string",
            "description": "Location Building",
            "nullable": true
          },
          "locationFloor": {
            "type": "string",
            "description": "Location Floor",
            "nullable": true
          },
          "locationRoom": {
            "type": "string",
            "description": "Location Room",
            "nullable": true
          },
          "locationNotes": {
            "type": "string",
            "description": "Location Notes",
            "nullable": true
          },
          "impactedAssetCount": {
            "type": "integer",
            "description": "Impacted Asset Count",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventRelatedCountRequestModel": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventRelatedCountResultModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventSeverityWrapperModel": {
        "required": [
          "eventCode",
          "severityCode"
        ],
        "type": "object",
        "properties": {
          "eventCode": {
            "minLength": 1,
            "type": "string",
            "description": "Event Code"
          },
          "severityCode": {
            "minLength": 1,
            "type": "string",
            "description": "Severity Code"
          }
        },
        "additionalProperties": false
      },
      "EventStandByOnWrapperModel": {
        "required": [
          "event",
          "standByMinute"
        ],
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventCodeFlowModel"
          },
          "standByMinute": {
            "type": "integer",
            "description": "Stand By Minutes",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventTypeQueryResultDetailModel": {
        "required": [
          "catCode",
          "code",
          "disabled",
          "dispOrder",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "dispOrder": {
            "type": "integer",
            "format": "int32"
          },
          "catCode": {
            "minLength": 1,
            "type": "string",
            "description": "Category code"
          }
        },
        "additionalProperties": false
      },
      "EventWrapperModel": {
        "required": [
          "event"
        ],
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/EventFlowModel"
          }
        },
        "additionalProperties": false
      },
      "FakeSignalRRequest": {
        "type": "object",
        "properties": {
          "signalREventEntity": {
            "$ref": "#/components/schemas/EventEntity"
          },
          "signalREventOperation": {
            "$ref": "#/components/schemas/EventOperation"
          }
        },
        "additionalProperties": false
      },
      "HistoryListQueryFilterModel": {
        "type": "object",
        "properties": {
          "actionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "freeSearch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HistoryListQueryModel": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/HistoryListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/HistoryQuerySortingDetailModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "HistoryListQueryResultModel": {
        "type": "object",
        "properties": {
          "flowRoleCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow Role Code",
            "nullable": true
          },
          "flowEventCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow Event Code",
            "nullable": true
          },
          "flowSourceCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow Source Code",
            "nullable": true
          },
          "flowTargetCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow Target Code",
            "nullable": true
          },
          "entityData": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Entity Data",
            "nullable": true
          },
          "userDetails": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "User Details",
            "nullable": true
          },
          "appDetails": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "App Details",
            "nullable": true
          },
          "actionDate": {
            "type": "string",
            "description": "Action Date",
            "format": "date-time",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/UserQueryDetailSmall"
          }
        },
        "additionalProperties": false
      },
      "HistoryListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoryListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HistoryQuerySortingDetailModel": {
        "type": "object",
        "properties": {
          "actionDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetCreateFlowModel": {
        "required": [
          "assetCode",
          "eventCode",
          "siteCode"
        ],
        "type": "object",
        "properties": {
          "siteCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Site Code"
          },
          "assetCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Asset Code"
          },
          "assetName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Asset Name",
            "nullable": true
          },
          "assetType": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Asset Type",
            "nullable": true
          },
          "assetDescription": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Asset Description",
            "nullable": true
          },
          "eventCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Event Code"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetCreateWrapperModel": {
        "required": [
          "impactedAsset"
        ],
        "type": "object",
        "properties": {
          "impactedAsset": {
            "$ref": "#/components/schemas/ImpactedAssetCreateFlowModel"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetDetailFlowModel": {
        "required": [
          "assetCode",
          "siteCode"
        ],
        "type": "object",
        "properties": {
          "siteCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Site Code"
          },
          "assetCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Asset Code"
          },
          "assetName": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Asset Name",
            "nullable": true
          },
          "assetType": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Asset Type",
            "nullable": true
          },
          "assetDescription": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Asset Description",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetDetailQueryFilterModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Filter by code if not null or missing"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetDetailQueryModel": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ImpactedAssetDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetListQueryFilterModel": {
        "required": [
          "eventCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "eventCode": {
            "minLength": 1,
            "type": "string"
          },
          "siteCode": {
            "type": "string",
            "nullable": true
          },
          "assetCode": {
            "type": "string",
            "nullable": true
          },
          "assetType": {
            "type": "string",
            "nullable": true
          },
          "assetName": {
            "type": "string",
            "nullable": true
          },
          "assetDescription": {
            "type": "string",
            "nullable": true
          },
          "assetUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetListQueryModel": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ImpactedAssetListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/ImpactedAssetListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "eventCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "siteCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "assetCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "assetType": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "assetName": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "assetDescription": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "assetUrl": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetQueryResultDetailModel": {
        "required": [
          "assetCode",
          "assetDescription",
          "assetName",
          "assetType",
          "assetUrl",
          "code",
          "eventCode",
          "siteCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "eventCode": {
            "minLength": 1,
            "type": "string",
            "description": "Event Code"
          },
          "siteCode": {
            "minLength": 1,
            "type": "string",
            "description": "Site Code"
          },
          "assetCode": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Code"
          },
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Type"
          },
          "assetName": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Name"
          },
          "assetDescription": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Description"
          },
          "assetUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Asset url"
          },
          "shortLocalizationObject": {
            "type": "string",
            "description": "Short Localization Object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetRemoveWrapperModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetsDetailQueryResultModel": {
        "required": [
          "assetCode",
          "assetDescription",
          "assetName",
          "assetType",
          "assetUrl",
          "code",
          "eventCode",
          "siteCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "eventCode": {
            "minLength": 1,
            "type": "string",
            "description": "Event Code"
          },
          "siteCode": {
            "minLength": 1,
            "type": "string",
            "description": "Site Code"
          },
          "assetCode": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Code"
          },
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Type"
          },
          "assetName": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Name"
          },
          "assetDescription": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Description"
          },
          "assetUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Asset url"
          },
          "shortLocalizationObject": {
            "type": "string",
            "description": "Short Localization Object",
            "nullable": true
          },
          "site": {
            "$ref": "#/components/schemas/SiteQueryResultDetailModel"
          },
          "event": {
            "$ref": "#/components/schemas/EventQueryResultDetailModel"
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetsListQueryResultModel": {
        "required": [
          "assetCode",
          "assetDescription",
          "assetName",
          "assetType",
          "assetUrl",
          "code",
          "eventCode",
          "siteCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "eventCode": {
            "minLength": 1,
            "type": "string",
            "description": "Event Code"
          },
          "siteCode": {
            "minLength": 1,
            "type": "string",
            "description": "Site Code"
          },
          "assetCode": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Code"
          },
          "assetType": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Type"
          },
          "assetName": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Name"
          },
          "assetDescription": {
            "minLength": 1,
            "type": "string",
            "description": "Asset Description"
          },
          "assetUrl": {
            "minLength": 1,
            "type": "string",
            "description": "Asset url"
          },
          "shortLocalizationObject": {
            "type": "string",
            "description": "Short Localization Object",
            "nullable": true
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceLocation"
            }
          }
        },
        "additionalProperties": false
      },
      "ImpactedAssetsListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpactedAssetsListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IncidentCreateFlowModel": {
        "required": [
          "eventCode",
          "siteCode"
        ],
        "type": "object",
        "properties": {
          "siteCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Site Code"
          },
          "eventCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Event Code"
          }
        },
        "additionalProperties": false
      },
      "IncidentCreateWrapperModel": {
        "required": [
          "incident"
        ],
        "type": "object",
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentCreateFlowModel"
          }
        },
        "additionalProperties": false
      },
      "IncidentDetailFlowModel": {
        "required": [
          "siteCode"
        ],
        "type": "object",
        "properties": {
          "siteCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Site Code"
          }
        },
        "additionalProperties": false
      },
      "IncidentDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncidentDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/IncidentDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "IncidentDetailQueryResultModel": {
        "required": [
          "code",
          "stateCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "createdOn": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "CreatedOn",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity Code",
            "nullable": true
          },
          "eventCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Event Code",
            "nullable": true
          },
          "siteCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Site Code",
            "nullable": true
          },
          "stateCode": {
            "minLength": 1,
            "type": "string",
            "description": "State code"
          }
        },
        "additionalProperties": false
      },
      "IncidentFlowModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "bottomUpDirection": {
            "type": "boolean",
            "description": "BottomUpDirection",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncidentListQueryFilterModel": {
        "required": [
          "eventCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "severityCode": {
            "type": "string",
            "nullable": true
          },
          "eventCode": {
            "minLength": 1,
            "type": "string"
          },
          "siteCode": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncidentListQueryModel": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/IncidentListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/IncidentListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "IncidentListQueryResultModel": {
        "required": [
          "code",
          "severity",
          "site",
          "stateCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "createdOn": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "CreatedOn",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity Code",
            "nullable": true
          },
          "eventCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Event Code",
            "nullable": true
          },
          "siteCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Site Code",
            "nullable": true
          },
          "stateCode": {
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "site": {
            "$ref": "#/components/schemas/SiteQueryResultDetailModel"
          },
          "severity": {
            "$ref": "#/components/schemas/SeverityTypeQueryResultDetailModel"
          }
        },
        "additionalProperties": false
      },
      "IncidentListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IncidentListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "createdOn": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "severityCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "eventCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "siteCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "IncidentWrapperModel": {
        "required": [
          "incident"
        ],
        "type": "object",
        "properties": {
          "incident": {
            "$ref": "#/components/schemas/IncidentFlowModel"
          }
        },
        "additionalProperties": false
      },
      "KeyValuePairModel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KpiEventsByCategoryQueryResultModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "KpiEventsBySeverityItemModel": {
        "type": "object",
        "properties": {
          "severityCode": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "percentuage": {
            "type": "number",
            "format": "double"
          },
          "reservedCount": {
            "type": "integer",
            "format": "int32"
          },
          "dispOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "KpiEventsBySeverityQueryResultModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KpiEventsBySeverityItemModel"
            },
            "description": "Items"
          }
        },
        "additionalProperties": false
      },
      "KpiEventsBySourceItemModel": {
        "type": "object",
        "properties": {
          "reportingTypeCode": {
            "type": "string",
            "nullable": true
          },
          "sum": {
            "type": "integer",
            "format": "int32"
          },
          "percentuage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "KpiEventsBySourceQueryResultModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KpiEventsBySourceItemModel"
            },
            "description": "Items"
          }
        },
        "additionalProperties": false
      },
      "ListResultModel": {
        "type": "object",
        "properties": {
          "eventResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultModel"
            },
            "description": "Events",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManagedEventCountQueryFilterModel": {
        "type": "object",
        "properties": {
          "userCode": {
            "type": "string",
            "nullable": true
          },
          "userOrgCode": {
            "type": "string",
            "nullable": true
          },
          "typeCount": {
            "$ref": "#/components/schemas/TypeCount"
          }
        },
        "additionalProperties": false
      },
      "ManagedEventsCountItemModel": {
        "type": "object",
        "properties": {
          "countEvent": {
            "type": "integer",
            "format": "int32"
          },
          "stateEvent": {
            "$ref": "#/components/schemas/StateEventResultModel"
          },
          "userCode": {
            "type": "string",
            "nullable": true
          },
          "userOrgCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManagedEventsCountQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/ManagedEventCountQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "ManagedEventsCountQueryResultModel": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManagedEventsCountItemModel"
            },
            "description": "Items"
          }
        },
        "additionalProperties": false
      },
      "MockResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NoteEventTypeFlowModel": {
        "required": [
          "description",
          "entityCode",
          "entityType"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "entityCode": {
            "minLength": 1,
            "type": "string",
            "description": "Entity Code"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnumModel"
          }
        },
        "additionalProperties": false
      },
      "NoteListQueryFilterModel": {
        "required": [
          "entityType"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnumModel"
          },
          "entityCode": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NoteListQueryModel": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/NoteListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/NoteListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "NoteListQueryResultModel": {
        "required": [
          "code",
          "entityType"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnumModel"
          },
          "entityCode": {
            "type": "string",
            "description": "Entity Code",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "Title",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "description": "CreatedBy",
            "nullable": true
          },
          "createdOn": {
            "type": "string",
            "description": "CreatedOn",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NoteListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "NoteListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "entityCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "title": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "createdBy": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "createdOn": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "NoteModifyFlowModel": {
        "required": [
          "code",
          "description",
          "entityCode",
          "entityType"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "entityCode": {
            "minLength": 1,
            "type": "string",
            "description": "Entity Code"
          },
          "entityType": {
            "$ref": "#/components/schemas/EntityTypeEnumModel"
          },
          "code": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "NoteRemoveFlowModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "NotificationCreateWrapperModel": {
        "required": [
          "deviceCode",
          "extCode",
          "severityCode",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "extCode": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "External code"
          },
          "deviceCode": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Device code"
          },
          "typeCode": {
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "severityCode": {
            "minLength": 1,
            "type": "string",
            "description": "Severity code"
          },
          "siteCode": {
            "type": "string",
            "description": "Site code",
            "nullable": true
          },
          "assetCode": {
            "type": "string",
            "description": "Asset code",
            "nullable": true
          },
          "orgCode": {
            "type": "string",
            "description": "Org code",
            "nullable": true
          },
          "geoLocation": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is reserved",
            "default": false,
            "nullable": true
          },
          "isSimulation": {
            "type": "boolean",
            "description": "Is simulation",
            "default": false,
            "nullable": true
          },
          "eventNote": {
            "type": "string",
            "description": "Event note",
            "nullable": true
          },
          "callerContact": {
            "type": "string",
            "description": "Caller Contact",
            "nullable": true
          },
          "callerNote": {
            "type": "string",
            "description": "Caller note",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {

        }
      },
      "PsimCommandDataQueryResultModel": {
        "type": "object",
        "properties": {
          "commandTypeId": {
            "type": "integer",
            "description": "Command Type Id",
            "format": "int32"
          },
          "deviceId": {
            "type": "integer",
            "description": "Device Id",
            "format": "int32"
          },
          "multiAttributeStateId": {
            "type": "integer",
            "description": "Multi-Attribute State Id",
            "format": "int32"
          },
          "buttonText": {
            "type": "string",
            "description": "Button Text",
            "nullable": true
          },
          "infoText": {
            "type": "string",
            "description": "Info Text",
            "nullable": true
          },
          "confirmText": {
            "type": "string",
            "description": "Confirm Text",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PsimDataDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string",
            "description": "Event Code",
            "nullable": true
          },
          "deviceId": {
            "type": "integer",
            "description": "Device Id",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PsimDataDetailQueryModel": {
        "required": [
          "filter"
        ],
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/PsimDataDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "PsimDataDetailQueryResultModel": {
        "type": "object",
        "properties": {
          "alarmIsCleared": {
            "type": "boolean",
            "description": "Alarm is Cleared"
          },
          "urlDevice": {
            "type": "string",
            "description": "Device Url",
            "nullable": true
          },
          "urlLocation": {
            "type": "string",
            "description": "Location Url",
            "nullable": true
          },
          "urlCameras": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Cameras Urls",
            "nullable": true
          },
          "commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PsimCommandDataQueryResultModel"
            },
            "nullable": true
          },
          "dictionaryCameras": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairModel"
            },
            "description": "Cameras Dictionary",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryPagingModel": {
        "type": "object",
        "properties": {
          "pageSize": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageIndex": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuerySortingItemModel": {
        "type": "object",
        "properties": {
          "isDesc": {
            "type": "boolean",
            "nullable": true
          },
          "order": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatebleEventListQueryFilterModel": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "eventSeverity": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatebleEventListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RelatebleEventListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/RelatebleEventListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "RelatebleEventListQueryResultModel": {
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/RelatebleEventQueryResultDetailModel"
          },
          "creator": {
            "$ref": "#/components/schemas/UserQueryResultDetailModel"
          },
          "site": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteQueryResultDetailModel"
            },
            "nullable": true
          },
          "impactAsset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpactedAssetQueryResultDetailModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatebleEventListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatebleEventListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RelatebleEventListQuerySortingModel": {
        "type": "object",
        "additionalProperties": false
      },
      "RelatebleEventQueryResultDetailModel": {
        "required": [
          "code",
          "escalationDate",
          "eventDate",
          "flowCode",
          "isReserved",
          "isSimulation",
          "reference",
          "severityCode",
          "severityId",
          "severityName",
          "stateCode",
          "stateDate",
          "type__Name",
          "typeCode",
          "typeId"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "managCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag code",
            "nullable": true
          },
          "managDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Manag date",
            "format": "date-time",
            "nullable": true
          },
          "eventDate": {
            "type": "string",
            "description": "Event date",
            "format": "date-time"
          },
          "flowCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "typeId": {
            "minLength": 1,
            "type": "string",
            "description": "Type id"
          },
          "subtypeCode": {
            "type": "string",
            "description": "Subtype code",
            "nullable": true
          },
          "subtypeName": {
            "type": "string",
            "description": "Subtype Name",
            "nullable": true
          },
          "subtypeId": {
            "type": "string",
            "description": "Subtype id",
            "nullable": true
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity code"
          },
          "severityId": {
            "minLength": 1,
            "type": "string",
            "description": "Severity id"
          },
          "reference": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Reference"
          },
          "note": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Note",
            "nullable": true
          },
          "closingNote": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Closing Note",
            "nullable": true
          },
          "escalationDate": {
            "type": "string",
            "description": "Escalation date",
            "format": "date-time"
          },
          "isReserved": {
            "type": "boolean",
            "description": "Is Reserved"
          },
          "isSimulation": {
            "type": "boolean",
            "description": "Is Simulation"
          },
          "severityName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Severity name"
          },
          "type__Name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          }
        },
        "additionalProperties": false
      },
      "RelatedEventCreateFlowModel": {
        "type": "object",
        "properties": {
          "eventSlaveCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Event code slave",
            "nullable": true
          },
          "eventMasterCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Event code master",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedEventCreateWrapperModel": {
        "required": [
          "relatedEvent"
        ],
        "type": "object",
        "properties": {
          "relatedEvent": {
            "$ref": "#/components/schemas/RelatedEventCreateFlowModel"
          }
        },
        "additionalProperties": false
      },
      "RelatedEventDetailFlowModel": {
        "type": "object",
        "properties": {
          "eventSlaveCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Event code slave",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedEventListQueryFilterModel": {
        "type": "object",
        "properties": {
          "eventMasterCode": {
            "type": "string",
            "nullable": true
          },
          "eventSlaveCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedEventListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RelatedEventListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/RelatedEventListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "RelatedEventListQueryResultModel": {
        "type": "object",
        "properties": {
          "eventMasterCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Event master code",
            "nullable": true
          },
          "eventSlaveCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Event slave code",
            "nullable": true
          },
          "eventSlave": {
            "$ref": "#/components/schemas/EventQueryResultDetailModel"
          }
        },
        "additionalProperties": false
      },
      "RelatedEventListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedEventListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RelatedEventListQuerySortingModel": {
        "type": "object",
        "properties": {
          "eventMasterCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "eventSlaveCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "ReportRequestModel": {
        "type": "object",
        "properties": {
          "eventCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportingPartyTypeQueryResultModels": {
        "required": [
          "code",
          "dispOrder",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "dispOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ResultModel": {
        "required": [
          "code",
          "histCode",
          "stateCode"
        ],
        "type": "object",
        "properties": {
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "StateCode"
          },
          "histCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "HistCode"
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersCreateWrapperModel": {
        "required": [
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "minLength": 1,
            "type": "string",
            "description": ""
          },
          "rules": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "propertyValue": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RulesEngineParametersDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersDetailQueryResultModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RulesEngineParametersListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/RulesEngineParametersListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersListQueryResultModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RulesEngineParametersListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersModifyWrapperModel": {
        "required": [
          "code",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": ""
          },
          "typeCode": {
            "minLength": 1,
            "type": "string",
            "description": ""
          },
          "rules": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "propertyValue": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RulesEngineParametersResultModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "propertyValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SeverityTypeQueryResultDetailModel": {
        "required": [
          "code",
          "dispOrder",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "dispOrder": {
            "type": "integer",
            "description": "Disp order",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SignalingCaller": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "reportingPartyTypeCode": {
            "type": "string",
            "description": "Reporting Party Type",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "description": "External ID",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "description": "Type Code",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "Value",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingCreateWrapperModel": {
        "required": [
          "description",
          "orgCode",
          "severityCode",
          "title",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "severityCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Severity Code"
          },
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "caller": {
            "$ref": "#/components/schemas/CallerWrapper"
          }
        },
        "additionalProperties": false
      },
      "SignalingDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingDetailQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SignalingDetailQueryFilterModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "severityCode",
          "severityName",
          "stateCode",
          "stateDate",
          "title",
          "typeCode",
          "typeName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "eventCode": {
            "type": "string",
            "description": "Event code",
            "nullable": true
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "typeName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity code"
          },
          "severityName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Severity name"
          },
          "geoLocation": {
            "type": "string",
            "description": "GeoLocation",
            "nullable": true
          },
          "caller": {
            "$ref": "#/components/schemas/CallerDetailQueryResultModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingFlowModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "eventCode": {
            "type": "string",
            "description": "EventCode",
            "nullable": true
          },
          "callerCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingListQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "flowCode": {
            "type": "string",
            "nullable": true
          },
          "eventCode": {
            "type": "string",
            "nullable": true
          },
          "stateCode": {
            "type": "string",
            "nullable": true
          },
          "stateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "severityCode": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "searchType": {
            "type": "string",
            "description": "Type of default query, must be set only for dashboard calls",
            "nullable": true
          },
          "freeSearch": {
            "type": "string",
            "nullable": true
          },
          "createDateFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createDateTo": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingListQueryForExportModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SignalingListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/SignalingListQuerySortingModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SignalingListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/SignalingListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingListQueryResultModel": {
        "required": [
          "code",
          "description",
          "flowCode",
          "severity",
          "severityCode",
          "severityName",
          "stateCode",
          "stateDate",
          "title",
          "type",
          "typeCode",
          "typeName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "eventCode": {
            "type": "string",
            "description": "Event code",
            "nullable": true
          },
          "flowCode": {
            "minLength": 1,
            "type": "string",
            "description": "Flow code"
          },
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State code"
          },
          "stateDate": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "State date",
            "format": "date-time"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "typeName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Type name"
          },
          "severityCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Severity code"
          },
          "severityName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Severity name"
          },
          "geoLocation": {
            "type": "string",
            "description": "GeoLocation",
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/SignalingSeverityTypeQueryResultDetailModel"
          },
          "type": {
            "$ref": "#/components/schemas/SignalingTypeQueryResultDetailModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignalingListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SignalingListQuerySortingModel": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "flowCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "stateDate": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "typeCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "severityCode": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "title": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "description": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "severity": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          },
          "type": {
            "$ref": "#/components/schemas/QuerySortingItemModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingModifyWrapperModel": {
        "required": [
          "code",
          "description",
          "orgCode",
          "severityCode",
          "title",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Type Code"
          },
          "severityCode": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string",
            "description": "Severity Code"
          },
          "title": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Title"
          },
          "description": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "geoLocation": {
            "type": "string",
            "description": "Geo Location",
            "nullable": true
          },
          "orgCode": {
            "minLength": 1,
            "type": "string",
            "description": "Org. Code"
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          },
          "caller": {
            "$ref": "#/components/schemas/CallerWrapper"
          }
        },
        "additionalProperties": false
      },
      "SignalingSeverityTypeQueryResultDetailModel": {
        "required": [
          "code",
          "dispOrder",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "dispOrder": {
            "type": "integer",
            "description": "Disp order",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateDeleteWrapperModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Name"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "campaignAssociate": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementDeleteWrapperModel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementDetailQueryFilterModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Filter by code if not null or missing",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementDetailQueryResultModel": {
        "required": [
          "code",
          "description",
          "isRequired",
          "measureType",
          "name",
          "signalingElementTypeName",
          "signalingName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Name"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "isRequired": {
            "minLength": 1,
            "type": "string",
            "description": "IsRequired"
          },
          "measureType": {
            "minLength": 1,
            "type": "string",
            "description": "MeasureType"
          },
          "signalingName": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingName"
          },
          "signalingElementTypeName": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingElementTypeName"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQueryFilterModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQueryFilterModelByTemplate": {
        "type": "object",
        "properties": {
          "templateCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SignalingTemplateElementListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/SignalingTemplateElementListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQueryModelByTemplate": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SignalingTemplateElementListQueryFilterModelByTemplate"
          },
          "sorting": {
            "$ref": "#/components/schemas/SignalingTemplateElementListQuerySortingModelByTemplate"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQueryResultModel": {
        "required": [
          "code",
          "description",
          "isRequired",
          "measureType",
          "name",
          "signalingElementTypeName",
          "signalingName"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Name"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "isRequired": {
            "minLength": 1,
            "type": "string",
            "description": "IsRequired"
          },
          "measureType": {
            "minLength": 1,
            "type": "string",
            "description": "MeasureType"
          },
          "signalingName": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingName"
          },
          "signalingElementTypeName": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingElementTypeName"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignalingTemplateElementListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQuerySortingModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementListQuerySortingModelByTemplate": {
        "type": "object",
        "additionalProperties": false
      },
      "SignalingTemplateElementModifyWrapperModel": {
        "required": [
          "code",
          "isRequired",
          "measureType",
          "name",
          "signalingElementTypeCode",
          "signalingTemplateCode",
          "signalingTemplateId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "TemplateElementName"
          },
          "description": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Element Description",
            "nullable": true
          },
          "isRequired": {
            "minLength": 1,
            "type": "string",
            "description": "IsRequired"
          },
          "measureType": {
            "minLength": 1,
            "type": "string",
            "description": "MeasureType"
          },
          "signalingTemplateId": {
            "type": "integer",
            "description": "SignalingTemplateId",
            "format": "int32"
          },
          "signalingTemplateCode": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingTemplateCode"
          },
          "signalingElementTypeCode": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingElementTypeCode"
          },
          "signalingRegexCode": {
            "type": "string",
            "description": "SignalingRegexCode",
            "nullable": true
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementValue": {
        "type": "object",
        "properties": {
          "signalingTemplateElementCode": {
            "type": "string",
            "description": "SignalingTemplateElementCode",
            "nullable": true
          },
          "signalingTemplateElementName": {
            "type": "string",
            "description": "SignalingTemplateElementName",
            "nullable": true
          },
          "dataValue": {
            "type": "string",
            "description": "DataValue",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateElementWrapperModel": {
        "required": [
          "isRequired",
          "measureType",
          "name",
          "signalingElementTypeCode",
          "signalingTemplateCode",
          "signalingTemplateId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "TemplateElementName"
          },
          "description": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Element Description",
            "nullable": true
          },
          "isRequired": {
            "minLength": 1,
            "type": "string",
            "description": "IsRequired"
          },
          "measureType": {
            "minLength": 1,
            "type": "string",
            "description": "MeasureType"
          },
          "signalingTemplateId": {
            "type": "integer",
            "description": "SignalingTemplateId",
            "format": "int32"
          },
          "signalingTemplateCode": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingTemplateCode"
          },
          "signalingElementTypeCode": {
            "minLength": 1,
            "type": "string",
            "description": "SignalingElementTypeCode"
          },
          "signalingRegexCode": {
            "type": "string",
            "description": "SignalingRegexCode",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateListQueryFilterModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateListQueryModel": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/SignalingTemplateListQueryFilterModel"
          },
          "sorting": {
            "$ref": "#/components/schemas/SignalingTemplateListQuerySortingModel"
          },
          "paging": {
            "$ref": "#/components/schemas/QueryPagingModel"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateListQueryResultModel": {
        "required": [
          "code",
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "Name"
          },
          "description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "campaignAssociate": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateListQueryResultModelPagedQueryResultModel": {
        "required": [
          "items",
          "pageCount",
          "pageIndex",
          "pageSize",
          "totalCount"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignalingTemplateListQueryResultModel"
            },
            "description": "TModel items",
            "readOnly": true
          },
          "pageSize": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "readOnly": true
          },
          "pageIndex": {
            "type": "integer",
            "description": "Page index",
            "format": "int32",
            "readOnly": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Page count",
            "format": "int32",
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Item count",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateListQuerySortingModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateModifyWrapperModel": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "TemplateName"
          },
          "description": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Code"
          }
        },
        "additionalProperties": false
      },
      "SignalingTemplateWrapperModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "TemplateName"
          },
          "description": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignalingTypeQueryResultDetailModel": {
        "required": [
          "catCode",
          "code",
          "disabled",
          "dispOrder",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "dispOrder": {
            "type": "integer",
            "format": "int32"
          },
          "catCode": {
            "minLength": 1,
            "type": "string",
            "description": "Category code"
          }
        },
        "additionalProperties": false
      },
      "SignalingWrapperModel": {
        "required": [
          "signaling"
        ],
        "type": "object",
        "properties": {
          "signaling": {
            "$ref": "#/components/schemas/SignalingFlowModel"
          }
        },
        "additionalProperties": false
      },
      "SiteQueryResultDetailModel": {
        "required": [
          "code",
          "disabled",
          "isShared",
          "name",
          "orgCode",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "orgCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Organization code"
          },
          "rootCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Root code",
            "nullable": true
          },
          "parCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Par code",
            "nullable": true
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Type code"
          },
          "geoLocation": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Geo location code",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "isShared": {
            "type": "boolean",
            "description": "Is shared"
          },
          "isRoot": {
            "type": "boolean",
            "description": "Is root",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StateEventResultModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransformedResultModel": {
        "required": [
          "code",
          "histCode",
          "stateCode"
        ],
        "type": "object",
        "properties": {
          "stateCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "StateCode"
          },
          "histCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "HistCode"
          },
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "severityCode": {
            "type": "string",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "severityName": {
            "type": "string",
            "nullable": true
          },
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "stateDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "caller": {
            "$ref": "#/components/schemas/SignalingCaller"
          }
        },
        "additionalProperties": false
      },
      "TypeCount": {
        "enum": [
          "None",
          "All",
          "Managed",
          "ManagedForUser",
          "Unmanaged"
        ],
        "type": "string"
      },
      "UserEventSummaryModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userCode": {
            "type": "string",
            "nullable": true
          },
          "userFirstName": {
            "type": "string",
            "nullable": true
          },
          "userLastName": {
            "type": "string",
            "nullable": true
          },
          "eventCount": {
            "type": "integer",
            "format": "int32"
          },
          "userState": {
            "$ref": "#/components/schemas/UserState"
          },
          "countBySeverity": {
            "$ref": "#/components/schemas/EventBySeverityCount"
          }
        },
        "additionalProperties": false
      },
      "UserEventSummaryResultModel": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserEventSummaryModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserQueryDetailSmall": {
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserQueryResultDetailModel": {
        "required": [
          "code",
          "disabled",
          "email",
          "lastName",
          "name",
          "orgCode",
          "roleCode",
          "siteCode",
          "typeCode",
          "username"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "lastName": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "fiscalCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "tntCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "orgCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "siteCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "typeCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "jobCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "operativeGroupCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "extCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "geoLocation": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "languageCode": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          },
          "roleCode": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserState": {
        "enum": [
          "Active",
          "Inactive"
        ],
        "type": "string"
      },
      "WorkSegmentItem": {
        "required": [
          "date",
          "endTimeString",
          "startTimeString"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "startTimeString": {
            "minLength": 1,
            "type": "string"
          },
          "endTimeString": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WorkSegmentRecurring": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "startTimeString": {
            "type": "string",
            "nullable": true
          },
          "endTimeString": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkstationCreateWrapperModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Value",
            "nullable": true
          },
          "userCode": {
            "type": "string",
            "description": "User Code",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkstationRequestModel": {
        "type": "object",
        "properties": {
          "workstationId": {
            "type": "string",
            "description": "Workstation Code",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkstationResultModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Beta80.Safety.Services.Operation.WebApi::Authentication": {
        "type": "http",
        "description": "Authentication Token",
        "scheme": "Bearer",
        "bearerFormat": "Bearer \u003CTOKEN\u003E"
      }
    }
  },
  "security": [
    {
      "Beta80.Safety.Services.Operation.WebApi::Authentication": []
    }
  ],
  "tags": [
    {
      "name": "Psim",
      "description": "Psim Controller"
    },
    {
      "name": "Workstation",
      "description": "Workstation Controller"
    }
  ]
}
